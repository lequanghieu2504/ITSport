-- ========================================
-- DROP & T·∫†O M·ªöI DATABASE
-- ========================================
IF DB_ID('ITSPORT_VERSION_TEST') IS NOT NULL
BEGIN
    ALTER DATABASE ITSPORT_VERSION_TEST SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE ITSPORT_VERSION_TEST;
END;
GO

CREATE DATABASE ITSPORT_VERSION_FINAL;
GO

USE ITSPORT_VERSION_FINAL;
GO

-- ========================================
-- 1Ô∏è‚É£ User Table (login account)
-- ========================================
CREATE TABLE [User] (
    user_id INT IDENTITY(1,1) PRIMARY KEY,
    email NVARCHAR(255) NULL,          -- S·ª≠a th√†nh NVARCHAR
    username NVARCHAR(50) NOT NULL UNIQUE, -- S·ª≠a th√†nh NVARCHAR
    password NVARCHAR(255) NULL,       -- S·ª≠a th√†nh NVARCHAR
    role NVARCHAR(20) NOT NULL         -- S·ª≠a th√†nh NVARCHAR
);

CREATE UNIQUE INDEX UX_User_Email ON [User](email) WHERE email IS NOT NULL;

-- ========================================
-- 2Ô∏è‚É£ Cart Table (gi·ªè h√†ng)
-- ========================================
CREATE TABLE Cart (
    cart_id INT IDENTITY(1,1) PRIMARY KEY
);

-- ========================================
-- 3Ô∏è‚É£ Client Table (profile)
-- ========================================
CREATE TABLE Client (
    client_id INT IDENTITY(1,1) PRIMARY KEY,
    user_id INT NOT NULL UNIQUE,
    cart_id INT UNIQUE,
    full_name NVARCHAR(100),
    phone_number NVARCHAR(20), -- S·ª≠a th√†nh NVARCHAR
    address NVARCHAR(255),
    FOREIGN KEY (user_id) REFERENCES [User](user_id),
    FOREIGN KEY (cart_id) REFERENCES Cart(cart_id)
);

-- ========================================
-- 4Ô∏è‚É£ Categories Table
-- ========================================
CREATE TABLE Categories (
    category_id INT IDENTITY(1,1) PRIMARY KEY,
    name NVARCHAR(100),
    parent_id INT NULL,
    FOREIGN KEY (parent_id) REFERENCES Categories(category_id)
);

-- ========================================
-- 5Ô∏è‚É£ Brand Table
-- ========================================
CREATE TABLE Brand (
    brand_id INT IDENTITY(1,1) PRIMARY KEY,
    name NVARCHAR(100)
);

-- ========================================
-- 6Ô∏è‚É£ Product Table
-- ========================================
CREATE TABLE Product (
    product_id INT IDENTITY(1,1) PRIMARY KEY,
    product_name NVARCHAR(100),
    description NVARCHAR(MAX),
    price DECIMAL(10,2),
    category_id INT,
    brand_id INT,
    status NVARCHAR(50), -- S·ª≠a th√†nh NVARCHAR
    FOREIGN KEY (category_id) REFERENCES Categories(category_id),
    FOREIGN KEY (brand_id) REFERENCES Brand(brand_id)
);

-- ========================================
-- 7Ô∏è‚É£ ProductVariant Table
-- ========================================
CREATE TABLE ProductVariant (
    product_variant_id INT IDENTITY(1,1) PRIMARY KEY,
    product_id INT,
    size NVARCHAR(10),  -- S·ª≠a th√†nh NVARCHAR (n·∫øu size c√≥ th·ªÉ ch·ª©a k√Ω t·ª± Unicode)
    color NVARCHAR(50), -- S·ª≠a th√†nh NVARCHAR
    quantity INT,
    sku NVARCHAR(50) UNIQUE, -- S·ª≠a th√†nh NVARCHAR
    FOREIGN KEY (product_id) REFERENCES Product(product_id)
);

-- ========================================
-- 8Ô∏è‚É£ Image Table
-- ========================================
CREATE TABLE Image (
    image_id INT IDENTITY(1,1) PRIMARY KEY,
    file_name NVARCHAR(255) NOT NULL, -- S·ª≠a th√†nh NVARCHAR n·∫øu t√™n file c√≥ th·ªÉ ch·ª©a Unicode
    target_id INT NOT NULL,
    target_type NVARCHAR(20) NOT NULL, -- S·ª≠a th√†nh NVARCHAR
    uploaded_at DATETIME DEFAULT GETDATE()
);

-- ========================================
-- 9Ô∏è‚É£ Cart_Item Table
-- ========================================
CREATE TABLE Cart_Item (
    cart_item_id INT IDENTITY(1,1) PRIMARY KEY,
    cart_id INT,
    product_id INT,
    product_variant_id INT,
    quantity INT,
    FOREIGN KEY (cart_id) REFERENCES Cart(cart_id),
    FOREIGN KEY (product_id) REFERENCES Product(product_id),
    FOREIGN KEY (product_variant_id) REFERENCES ProductVariant(product_variant_id)
);

-- ========================================
-- üîü Buyings Table (g·ªìm lu√¥n th√¥ng tin giao h√†ng)
-- ========================================
CREATE TABLE Buyings (
    buying_id INT IDENTITY(1,1) PRIMARY KEY,
    user_id INT NOT NULL,
    total_price DECIMAL(12,2) NOT NULL,
    payment_method NVARCHAR(30) NOT NULL, -- S·ª≠a th√†nh NVARCHAR
    status NVARCHAR(30) NOT NULL,         -- S·ª≠a th√†nh NVARCHAR
    created_at DATETIME DEFAULT GETDATE(),
    updated_at DATETIME DEFAULT GETDATE(),
    shippingName NVARCHAR(255),
    shippingPhone NVARCHAR(50),
    shippingStreet NVARCHAR(500),
    shippingWard NVARCHAR(255),
    shippingDistrict NVARCHAR(255),
    shippingProvince NVARCHAR(255),
    FOREIGN KEY (user_id) REFERENCES [User](user_id)
);

-- ========================================
-- 11Ô∏è‚É£ BuyingItems Table
-- ========================================
CREATE TABLE BuyingItems (
    buying_item_id INT IDENTITY(1,1) PRIMARY KEY,
    buying_id INT NOT NULL,
    product_id INT NOT NULL,
    variant_id INT NOT NULL,
    quantity INT NOT NULL,
    price_each DECIMAL(12,2) NOT NULL,
    FOREIGN KEY (buying_id) REFERENCES Buyings(buying_id),
    FOREIGN KEY (product_id) REFERENCES Product(product_id),
    FOREIGN KEY (variant_id) REFERENCES ProductVariant(product_variant_id)
);

-- ========================================
-- 1Ô∏è‚É£2Ô∏è‚É£ BuyingUserInfor Table (ƒë·ªãa ch·ªâ giao h√†ng c·ªßa user)
-- ========================================
CREATE TABLE BuyingUserInfor (
    id BIGINT IDENTITY(1,1) PRIMARY KEY,
    user_id INT NOT NULL,
    recipient_name NVARCHAR(255) NOT NULL,
    province NVARCHAR(255) NOT NULL,
    district NVARCHAR(255) NOT NULL,
    ward NVARCHAR(255) NOT NULL,
    street NVARCHAR(500) NOT NULL,
    phone NVARCHAR(50) NOT NULL,
    created_at DATETIME DEFAULT GETDATE(),
    updated_at DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (user_id) REFERENCES [User](user_id)
);

PRINT '‚úÖ ITSPORT_VERSION_TEST schema created successfully with full Unicode support!';
